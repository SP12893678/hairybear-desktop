/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 hairybear.gltf -t 
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Mesh_0: THREE.SkinnedMesh;
    mixamorig1Hips: THREE.Bone;
  };
  materials: {
    Material_0: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export type ActionName =
  | 'hip-hop-dancing'
  | 'jumping'
  | 'punching'
  | 'running'
  | 'sitting-clap'
  | 'sitting-pose'
  | 'walking'
  | 'weaving';

export const ActionNames: ActionName[] = [
  'hip-hop-dancing',
  'jumping',
  'punching',
  'running',
  'sitting-clap',
  'sitting-pose',
  'walking',
  'weaving'
];

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']
  >
>;

export function HairyBear(props: JSX.IntrinsicElements['group'] & { currentAnimation?: ActionName }) {
  const { currentAnimation } = props;
  const group = useRef<any>();
  const { nodes, materials, animations } = useGLTF(
    'assets/models/hairybear/hairybear.gltf'
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (currentAnimation) {
      ActionNames.forEach(name => actions[name]?.stop())
      actions[currentAnimation]?.play();
    }
  }, [currentAnimation])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          position={[0.21, -1.431, 0.207]}
          rotation={[1.573, 0.013, 0.021]}
          scale={0.041}
        >
          <primitive object={nodes.mixamorig1Hips} />
          <skinnedMesh
            name="Mesh_0"
            geometry={nodes.Mesh_0.geometry}
            material={materials.Material_0}
            skeleton={nodes.Mesh_0.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('assets/models/hairybear/hairybear.gltf');
